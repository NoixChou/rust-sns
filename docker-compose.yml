version: '3.8'

services:
  api:
    container_name: sns_api
    build:
      context: './rust-sns-api'
      dockerfile: 'Dockerfile'
    working_dir: '/api'
    command: /bin/sh -c "diesel migration run && cargo watch -w Cargo.toml -w src --poll -x 'run --release --color=always'"
    volumes:
      - './rust-sns-api:/api'
      - 'api-cargo:/usr/local/cargo/registry'
      - 'api-target:/api/target'
    ports:
      - '8087:80'
    environment:
      TZ: Asia/Tokyo
      DATABASE_URL: "postgresql://docker:2C%25Em%257%5e2L@sns_db/database"
      RUST_LOG: debug
    depends_on:
      db:
        condition: service_healthy

  db:
    container_name: sns_db
    image: postgres:14.4-alpine
    volumes:
      - './docker/db/data:/var/lib/postgresql:delegated'
    ports:
      - '54321:5432'
    environment:
      POSTGRES_DB: database
      POSTGRES_USER: docker
      POSTGRES_PASSWORD: 2C%Em%7^2L
      POSTGRES_INITDB_ARGS: --encoding=UTF-8 --locale=C
      TZ: 'Asia/Tokyo'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 5s
      timeout: 1s
      retries: 5
      start_period: 5s

  web:
    container_name: sns_web
    image: node:lts-buster-slim
    working_dir: '/src'
    command: /bin/sh -c "yarn install && yarn dev"
    volumes:
      - './rust-sns-web:/src'
      - 'node-modules:/src/node_modules'
    ports:
      - '8080:3000'
    environment:
      - CHOKIDAR_USEPOLLING=true
      - HOST=0.0.0.0
      - API_BASE=http://sns_api

volumes:
  api-cargo:
  api-target:
  node-modules:
